name: Enforce Development Rules

on:
  push:
    branches: [ main, staging ]
  pull_request:
    branches: [ main, staging ]
  schedule:
    - cron: '0 0 * * *'  # Daily at midnight
    - cron: '0 0 * * 0'  # Weekly on Sunday

jobs:
  code-quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Type check
        run: npm run type-check
        
      - name: Lint
        run: npm run lint
        
      - name: Format check
        run: npm run format:check
        
      - name: Run tests
        run: npm run test:all
        
      - name: Check test coverage
        run: npm run test:coverage
        
      - name: Run security audit
        run: npm audit
        
      - name: Run Lighthouse CI
        run: npm run lighthouse
        
      - name: Run accessibility tests
        run: npm run test:accessibility
        
      - name: Run performance tests
        run: npm run test:performance
        
      - name: Check bundle size
        run: npm run analyze:bundle
        
      - name: Check internationalization
        run: |
          for lang in en es fr; do
            if [ ! -f "public/locales/$lang/common.json" ]; then
              echo "Missing translation file for $lang"
              exit 1
            fi
          done

  security-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript, typescript
          
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
          
      - name: Run dependency scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          
      - name: Run secrets scan
        uses: trufflesecurity/trufflehog@v3.60.0
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD

  documentation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Check required documentation
        run: |
          for doc in README.md CONTRIBUTING.md CHANGELOG.md; do
            if [ ! -f "$doc" ]; then
              echo "Missing required documentation: $doc"
              exit 1
            fi
          done
          
          # Only warn for optional docs to avoid failing the build
          for doc in API.md ARCHITECTURE.md; do
            if [ ! -f "$doc" ]; then
              echo "Warning: Missing recommended documentation: $doc"
            fi
          done
          
      - name: Check component documentation
        run: |
          # Check if src/components directory exists before checking files
          if [ -d "src/components" ]; then
            find src/components -type f -name "*.tsx" -exec sh -c '
              if ! grep -q "@component\|@description" "$1"; then
                echo "Warning: Missing component documentation in $1"
              fi
            ' sh {} \;
          else
            echo "Warning: src/components directory not found"
          fi

  performance:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run performance tests
        run: npm run test:perf || echo "Performance tests failed, but continuing"
        
      - name: Check bundle size
        run: npm run analyze:bundle || echo "Bundle analysis failed, but continuing"
        
      - name: Run Lighthouse CI
        run: npm run lighthouse || echo "Lighthouse tests failed, but continuing"

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build
        run: npm run build
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-output
          path: .next/
          retention-days: 7

  notify:
    needs: [code-quality, security-scan, documentation, performance, build]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Notify on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const run_id = context.runId;
            const run_url = `https://github.com/${owner}/${repo}/actions/runs/${run_id}`;
            
            await github.rest.issues.create({
              owner,
              repo,
              title: `ðŸš¨ Development Rules Check Failed - Run #${run_id}`,
              body: `One or more development rule checks have failed. Please check the [workflow run](${run_url}) for details.`
            }); 